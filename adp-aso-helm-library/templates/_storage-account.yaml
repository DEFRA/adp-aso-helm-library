{{- define "adp-aso-helm-library.storage-account" -}}
{{- $requiredMsg := include "adp-aso-helm-library.default-check-required-msg" . }}
{{- $teamRGName := required (printf $requiredMsg "teamResourceGroupName") .Values.teamResourceGroupName }}
{{- $subscriptionId := required (printf $requiredMsg "subscriptionId") .Values.subscriptionId }} 
{{- $storageAccountObject := required (printf $requiredMsg "storageAccounts") .Values.storageAccounts }}
{{- range $storageAccount := .Values.storageAccounts }}
{{- $storageAccountName :=  required (printf $requiredMsg "storageAccount[].name") $storageAccount.name }}
{{- $owner := $storageAccount.owner | default "yes" }}
{{- if eq $owner "yes" }}
apiVersion: storage.azure.com/v1api20220901
kind: StorageAccount
metadata:
  name: {{ include "storageAccount.metadata.fullname" (list $ $storageAccountName) }}
  namespace: {{ required (printf $requiredMsg "namespace") $.Values.namespace | quote }}  
  {{- with $.Values.asoAnnotations }}
  annotations: 
    {{- toYaml . | nindent 4 }}
  {{- end }}  
spec:
  azureName: {{ $storageAccountName }}
  accessTier: {{ $storageAccount.accessTier | default "Hot" }}
  kind: StorageV2
  sku:
    name: {{ and $storageAccount.sku $storageAccount.sku.name | default "Standard_LRS" | quote }}
    tier: Standard
  location: {{ $storageAccount.location | default "uksouth" | quote }}
  allowBlobPublicAccess: {{ $storageAccount.allowBlobPublicAccess | default false }}
  allowCrossTenantReplication: {{ $storageAccount.allowCrossTenantReplication | default false }}
  allowSharedKeyAccess: {{ $storageAccount.allowSharedKeyAccess | default false }}
  defaultToOAuthAuthentication: {{ $storageAccount.defaultToOAuthAuthentication | default true }} 
  dnsEndpointType: "Standard"
  encryption:
    keySource: Microsoft.Storage
    requireInfrastructureEncryption: true
    services:
      blob:
        enabled: true
        keyType: Account
      file:
        enabled: true
        keyType: Account
  minimumTlsVersion: {{ $storageAccount.minimumTlsVersion | default "TLS1_2" | quote }}
  networkAcls:
    bypass: AzureServices
    defaultAction: Allow
    {{- if and $storageAccount.networking $storageAccount.networking.firewallandVirtualNetworks $storageAccount.networking.firewallandVirtualNetworks.ipRules }}
    ipRules: 
    {{- range $storageAccount.networking.firewallandVirtualNetworks.ipRules }}
    - action: Allow
      value: {{ . }}
    {{- end }} 
    {{- end }}   
    {{- if and $storageAccount.networking $storageAccount.networking.firewallandVirtualNetworks $storageAccount.networking.firewallandVirtualNetworks.virtualNetworkRules }}
    virtualNetworkRules: 
    {{- range $storageAccount.networking.firewallandVirtualNetworks.virtualNetworkRules }}
    - action: Allow
      reference:
        armId: {{ . }}
      state: Succeeded 
    {{- end }} 
    {{- end }}  
  {{- if and $storageAccount.networking $storageAccount.networking.publicNetworkAccess }}  
  publicNetworkAccess: {{ $storageAccount.networking.publicNetworkAccess }} 
  {{- else }} 
  publicNetworkAccess: "Disabled"
  {{- end }} 
  supportsHttpsTrafficOnly: true
  tags:
  {{- include "adp-aso-helm-library.commonTags" (list $ "") | indent 4 }} 
  owner:
    armId: {{ printf "/subscriptions/%s/resourceGroups/%s" $subscriptionId $teamRGName }}  
---
{{- end }} 
{{- if $storageAccount.storageAccountsBlobService }}  
---  
{{- include "adp-aso-helm-library.storage-account-blob-service" (list $ .) }} 
{{- end }} 
{{- if $storageAccount.blobContainers }}  
---  
{{- include "adp-aso-helm-library.storage-account-blob-services-container" (list $ .) }} 
{{- end }} 
{{- if $storageAccount.tables }}  
---  
{{- include "adp-aso-helm-library.storage-account-table-services-table" (list $ .) }} 
{{- end }} 
{{- if and $storageAccount.networking $storageAccount.networking.privateEndpoints }}  
---  
{{- include "adp-aso-helm-library.storage-account-private-endpoint" (list $ .) }} 
{{- end }} 
{{- end }}
{{- end }}