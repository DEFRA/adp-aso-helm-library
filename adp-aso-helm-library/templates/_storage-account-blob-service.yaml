{{- define "adp-aso-helm-library.storage-account-blob-service" -}}
{{- $ := index . 0 }}
{{- $storageAccountObj := index . 1 }}
{{- $requiredMsg := include "adp-aso-helm-library.default-check-required-msg" . }}
{{- $storageAccountFullName := include "storageAccount.fullname" (list $ $storageAccountObj.name) }}
apiVersion: storage.azure.com/v1api20220901
kind: StorageAccountsBlobService
metadata:
  name: {{ include "storageaccountsService.metadata.defaultName" (list $ $storageAccountFullName) }}
  namespace: {{ required (printf $requiredMsg "namespace") $.Values.namespace | quote }}  
  {{- with $.Values.asoAnnotations }}
  annotations:
    serviceoperator.azure.com/reconcile-policy: detach-on-delete
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.changeFeed $storageAccountObj.storageAccountsBlobService.changeFeed.enabled }}
  {{- $changeFeedRetentionInDays := required (printf $requiredMsg "storageAccountsBlobService.changeFeed.retentionInDays") $storageAccountObj.storageAccountsBlobService.changeFeed.retentionInDays }}
  changeFeed:
    enabled: true
    retentionInDays: {{ $changeFeedRetentionInDays }}
  {{- else }}
  changeFeed:
    enabled: false
  {{- end }}  

  {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.containerDeleteRetentionPolicy $storageAccountObj.storageAccountsBlobService.containerDeleteRetentionPolicy.enabled }}
  {{- $containerDeleteRetentionInDays := required (printf $requiredMsg "storageAccountsBlobService.containerDeleteRetentionPolicy.days") $storageAccountObj.storageAccountsBlobService.containerDeleteRetentionPolicy.days }}
  containerDeleteRetentionPolicy:
    enabled: true
    days: {{ $containerDeleteRetentionInDays }}
  {{- else }}
  containerDeleteRetentionPolicy:
    {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.containerDeleteRetentionPolicy (eq $storageAccountObj.storageAccountsBlobService.containerDeleteRetentionPolicy.enabled false) }}
    enabled: false
    {{- else }}
    enabled: true
    days: 7
    {{- end }} 
  {{- end }} 

  {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy.enabled }}
  {{- $blobDeleteRetentionInDays := required (printf $requiredMsg "storageAccountsBlobService.deleteRetentionPolicy.days") $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy.days }}
  deleteRetentionPolicy:
    allowPermanentDelete: {{ $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy.allowPermanentDelete | default false }}
    enabled: true
    days: {{ $blobDeleteRetentionInDays }}
  {{- else }}
  deleteRetentionPolicy:
    {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy }}
    allowPermanentDelete: {{ $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy.allowPermanentDelete | default false }}
    {{- else }}
    allowPermanentDelete: false
    {{- end }} 
    {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy (eq $storageAccountObj.storageAccountsBlobService.deleteRetentionPolicy.enabled false) }}
    enabled: false
    {{- else }}
    enabled: true
    days: 7
    {{- end }} 
  {{- end }} 

  {{- if and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.restorePolicy $storageAccountObj.storageAccountsBlobService.restorePolicy.enabled }}
  {{- $restoreInInDays := required (printf $requiredMsg "storageAccountsBlobService.restorePolicy.days") $storageAccountObj.storageAccountsBlobService.restorePolicy.days }}
  restorePolicy:
    enabled: true
    days: {{ $restoreInInDays }}
  {{- else }}
  restorePolicy:
    enabled: false
  {{- end }}   
  isVersioningEnabled: {{ and $storageAccountObj.storageAccountsBlobService $storageAccountObj.storageAccountsBlobService.isVersioningEnabled | default false }}
  cors: {}
  owner:
    armId: {{ printf "/subscriptions/%s/resourceGroups/%s/providers/Microsoft.Storage/storageAccounts/%s" $.Values.subscriptionId $.Values.teamResourceGroupName $storageAccountFullName }} 
{{- end }}